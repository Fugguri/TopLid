from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from main import db


def start_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    key_words = KeyboardButton(text="–ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê üéØ")
    unexcept_word = KeyboardButton(text="–ò–°–ö–õ–Æ–ß–ê–Æ–©–ò–ï –°–õ–û–í–êüö´")
    pay = KeyboardButton(text="–û–ü–õ–ê–¢–êüí∞")
    help_ = KeyboardButton(text="–ü–û–ú–û–©–¨ üÜò")
    chats = KeyboardButton(text="–ß–ê–¢–´üîé")
    keyboard.add(key_words, unexcept_word, chats, pay, help_)
    return keyboard


def keywords_list():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keywords_list = KeyboardButton(text="–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤")
    delete_keywords = KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞")
    add_keyword = KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ")
    back_to_main_menu = KeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    keyboard.add(
        add_keyword,
        keywords_list,
        delete_keywords,
        back_to_main_menu)
    return keyboard


def unexcept_keywords_list():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    unexcept_keywords_list = KeyboardButton(text="–°–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–∞—é—â–∏—Ö —Å–ª–æ–≤")
    unexcept_delete_keywords = KeyboardButton(
        text="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏—Å–∫–ª—é—á–∞—é—â–∏–µ —Å–ª–æ–≤–∞")
    unexcept_add_keyword = KeyboardButton(
        text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∏—Å–∫–ª—é—á–∞—é—â–µ–µ —Å–ª–æ–≤–æ")
    back_to_main_menu = KeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    keyboard.add(
        unexcept_add_keyword,
        unexcept_keywords_list,
        unexcept_delete_keywords,
        back_to_main_menu)
    return keyboard


def chats_list_():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    all_chats = KeyboardButton(text="–ú–æ–∏ —á–∞—Ç—ã")
    add_chat = KeyboardButton(
        text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç")
    delete_chat = KeyboardButton(
        text="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —á–∞—Ç—ã")
    back_to_main_menu = KeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    from_all_chats = KeyboardButton(text="–°–æ–±–∏—Ä–∞—Ç—å –∏–∑ –≤—Å–µ—Ö —á–∞—Ç–æ–≤")
    keyboard.add(all_chats,
                 add_chat,
                 delete_chat,
                 from_all_chats,
                 back_to_main_menu)
    return keyboard


def words_list(words):
    keyboard = InlineKeyboardMarkup(row_width=3)

    try:
        for word in words:
            button = InlineKeyboardButton(text=word, callback_data=word)
            keyboard.add(button)

    except Exception as ex:
        print(ex)

    return keyboard


def chats_key(words):
    keyboard = InlineKeyboardMarkup(row_width=3)

    try:
        for word in words:
            if len(word) >= 15:
                button = InlineKeyboardButton(
                    text=word, callback_data=word[:20])
                keyboard.add(button)
            else:
                button = InlineKeyboardButton(text=word, callback_data=word)
                keyboard.add(button)
            print(word)
    except Exception as ex:
        print(ex)

    return keyboard


def back():
    return ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(KeyboardButton(text="–ù–∞–∑–∞–¥"))


def links(message=None, chat_id=None, user=None):
    keyboard = InlineKeyboardMarkup(row_width=1)
    if chat_id is None:
        chat = f"https://t.me/joinchat/{db.get_chat_link(chat_id)}"
        keyboard.add(InlineKeyboardButton(text="–ß–∞—Ç", url=chat))
    else:
        chat = f"https://t.me/{chat_id}"
        keyboard.add(InlineKeyboardButton(text="–ß–∞—Ç", url=chat))
    if message:
        keyboard.add(InlineKeyboardButton(text="–°–æ–æ–±—â–µ–Ω–∏–µ", url=message))
    if "None" not in user:
        keyboard.add(InlineKeyboardButton(
            text="–û—Ç–≤–µ—Ç–∏—Ç—å", url=user))
    return keyboard
