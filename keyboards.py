from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from main import db


def start_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    key_words = KeyboardButton(text="–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞üéØ")
    unexcept_word = KeyboardButton(text="–ò—Å–∫–ª—é—á–∞—é—â–∏–µ —Å–ª–æ–≤–∞üö´")
    pay = KeyboardButton(text="–û–ø–ª–∞—Ç–∞üí∞")
    help_ = KeyboardButton(text="–ü–æ–º–æ—â—åüÜò")
    chats = KeyboardButton(text="–ß–∞—Ç—ãüîé")
    info = KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ TopLid_bot")
    keyboard.add(key_words, unexcept_word, chats, pay, help_, info)
    return keyboard


def info():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keys = KeyboardButton(text="–ö–µ–π—Å—ã")
    instruction = KeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
    feedback = KeyboardButton(text="–û—Ç–∑—ã–≤—ã")
    keyboard.add(keys, instruction, feedback)
    back_to_main_menu = KeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    keyboard.add(back_to_main_menu)
    return keyboard


def keywords_list():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keywords_list = KeyboardButton(text="–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤")
    delete_keywords = KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞")
    add_keyword = KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ")
    back_to_main_menu = KeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    keyboard.add(
        add_keyword,
        keywords_list,
        delete_keywords).add(back_to_main_menu)
    return keyboard


def unexcept_keywords_list():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    unexcept_keywords_list = KeyboardButton(text="–°–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–∞—é—â–∏—Ö —Å–ª–æ–≤")
    unexcept_delete_keywords = KeyboardButton(
        text="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏—Å–∫–ª—é—á–∞—é—â–∏–µ —Å–ª–æ–≤–∞")
    unexcept_add_keyword = KeyboardButton(
        text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∏—Å–∫–ª—é—á–∞—é—â–µ–µ —Å–ª–æ–≤–æ")
    back_to_main_menu = KeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    keyboard.add(
        unexcept_add_keyword,
        unexcept_keywords_list,
        unexcept_delete_keywords).add(back_to_main_menu)
    return keyboard


def chats_list_(telegram_id: int):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    all_chats = KeyboardButton(text="–ú–æ–∏ —á–∞—Ç—ã")
    add_chat = KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç")
    back_to_main_menu = KeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    parse_message = KeyboardButton(text="–ü–æ–∏—Å–∫ –ø–æ —á–∞—Ç–∞–º(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
    delete_chat = KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —á–∞—Ç—ã")
    keyboard.add(all_chats, add_chat).add(delete_chat)
    if db.get_status(telegram_id) == 1:
        keyboard.add(KeyboardButton(text="–°–æ–±–∏—Ä–∞—Ç—å –∏–∑ –º–æ–∏—Ö —á–∞—Ç–æ–≤"))
    else:
        keyboard.add(KeyboardButton(text="–°–æ–±–∏—Ä–∞—Ç—å –∏–∑ –≤—Å–µ—Ö —á–∞—Ç–æ–≤"))
    keyboard.add(parse_message)
    keyboard.add(back_to_main_menu)
    return keyboard


def isall(telegram_id):
    print(1)


def words_list(words):
    keyboard = InlineKeyboardMarkup(row_width=3)
    try:
        for word in words:
            if len(word) >= 15:
                button = InlineKeyboardButton(
                    text=word[0], callback_data=word[1])
                keyboard.add(button)
            else:
                button = InlineKeyboardButton(
                    text=word[0], callback_data=word[1])
                keyboard.add(button)

    except Exception as ex:
        print(ex)

    return keyboard


def chats_key(words):
    keyboard = InlineKeyboardMarkup(row_width=3)

    try:
        for word in words:
            if len(word[0]) >= 15:
                button = InlineKeyboardButton(
                    text=word[0][:30], callback_data=word[1])
                keyboard.add(button)
            else:
                button = InlineKeyboardButton(
                    text=word[0], callback_data=word[1])
                keyboard.add(button)
    except Exception as ex:
        print(ex)

    return keyboard


def back():
    return ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(KeyboardButton(text="–ù–∞–∑–∞–¥"))


def links(message=None, chat_id=None, user=None):
    keyboard = InlineKeyboardMarkup(row_width=1)
    if chat_id is None:
        chat = f"https://t.me/joinchat/{db.get_chat_link(chat_id)}"
        keyboard.add(InlineKeyboardButton(
            text="–ß–∞—Ç", callback_data=chat))
    else:
        chat = f"https://t.me/{chat_id}"
        keyboard.add(InlineKeyboardButton(
            text="–ß–∞—Ç", callback_data=chat))
    if message:
        keyboard.add(InlineKeyboardButton(text="–°–æ–æ–±—â–µ–Ω–∏–µ",
                                          callback_data=message))
    if "None" not in user:
        keyboard.add(InlineKeyboardButton(
            text="–û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=user))

    return keyboard


def message_collector_week_range():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(
        text=f'–°–æ–æ–±—â–µ–Ω–∏—è –∑–∞ 1 –Ω–µ–¥–µ–ª—é', callback_data=f'1 week'))
    keyboard.add(InlineKeyboardButton(
        text=f'–°–æ–æ–±—â–µ–Ω–∏—è –∑–∞ 2 –Ω–µ–¥–µ–ª–∏', callback_data=f'2 week'))
    keyboard.add(InlineKeyboardButton(
        text=f'–°–æ–æ–±—â–µ–Ω–∏—è –∑–∞ 3 –Ω–µ–¥–µ–ª–∏', callback_data=f'3 week'))
    keyboard.add(InlineKeyboardButton(
        text=f'–°–æ–æ–±—â–µ–Ω–∏—è –∑–∞ 4 –Ω–µ–¥–µ–ª–∏', callback_data=f'4 week'))
    return keyboard
