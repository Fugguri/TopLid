from asyncio import sleep
import calendar
import datetime
from keyboards import start_keyboard, keywords_list, unexcept_keywords_list, words_list, back, chats_list_, chats_key
from aiogram.dispatcher.filters import Text
from aiogram import types
from main import dp, db, bot
from aiogram.dispatcher.filters.state import State, StatesGroup


class AddWord(StatesGroup):
    word = State()


class AddUnex_Word(StatesGroup):
    word = State()


class AddChat(StatesGroup):
    chat = State()


@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    start_date = datetime.date.today()  # –≥–æ–¥, –º–µ—Å—è—Ü, —á–∏—Å–ª–æ
    result_date = start_date - datetime.timedelta(days=1)
    await message.answer(text="""TopLid_bot –ø–æ–º–æ–≥–∞–µ—Ç –∏—Å–∫–∞—Ç—å –ª–∏–¥–æ–≤ –∏ –∑–∞–∫–∞–∑—ã  –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º üîé
–ë–æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –ø–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º —á–∞—Ç–∞–º –∏ –∫–∞–Ω–∞–ª–∞–º  –≤ Telegram üîé

–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –ª–∏–¥–æ–≤:
üìå–î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ –ø—É–Ω–∫—Ç –º–µ–Ω—é ¬´–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞¬ª
üìå–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å–≤–æ—è –±–∞–∑–∞ —á–∞—Ç–æ–≤ —Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –µ–µ –≤  –ø—É–Ω–∫—Ç–µ –º–µ–Ω—é ¬´–ß–∞—Ç—ã¬ª. –í –±–æ—Ç–µ —É–∂–µ –±–æ–ª—å—à–µ 10 000 —á–∞—Ç–æ–≤ –∏ 15 000 –∫–∞–Ω–∞–ª–æ–≤, –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±–∞–∑–∞ –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è.
üìå–ü–æ–ª—É—á–∞–π—Ç–µ –ª–∏–¥–æ–≤ –≤ –±–æ—Ç –∏ –æ—Ç–≤–µ—á–∞–π—Ç–µ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —á–µ—Ä–µ–∑ —Å—Å—ã–ª–∫—É ¬´–û—Ç–≤–µ—Ç–∏—Ç—å¬ª –≤ –∫–æ–Ω—Ü–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏—á–∫–∞)

–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —É–∑–Ω–∞—Ç—å –æ –±–æ—Ç–µ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /help üÜò""",
                         reply_markup=start_keyboard())
    db.create_user(message.from_user.id,
                   message.from_user.full_name, message.from_user.username, str(result_date))


@dp.message_handler(lambda message: '–°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç' in message.text)
async def asd(message: types.Message):
    await bot.send_message(chat_id=248184623, text=message.text)
    # await bot.send_message(chat_id=1358110465, text=str(message.text))


@dp.message_handler(Text(equals='–û–ü–õ–ê–¢–êüí∞'))
async def pay(message: types.Message):
    await message.answer(text="–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ \n–ù–∞–ø–∏—à–∏—Ç–µ @son2421")


@dp.message_handler(Text(equals='–ü–û–ú–û–©–¨ üÜò'))
async def help(message: types.Message):
    await message.answer(text="–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º @son2421")


@dp.message_handler(Text(equals='–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
async def main_menu(message: types.Message):
    await message.answer(text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=start_keyboard())

"""–ö–æ–º–∞–Ω–¥—ã"""


@dp.message_handler(commands=["help"])
async def set_time(message: types.Message):
    message.answer('''–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–µ—Ä–≤–∏—Å:

–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –æ–±—É—á–µ–Ω–Ω—ã–π –±–æ—Ç —Å–∏–¥–∏—Ç –≤ –∫–∞–Ω–∞–ª–∞—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö –¥–ª—è –æ–±—â–µ–Ω–∏—è: –±–∏–∑–Ω–µ—Å–∞, –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞—Ö.

–û–Ω —á–∏—Ç–∞–µ—Ç –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º –∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –¥–ª—è –í–ê–° —Å–æ–æ–±—â–µ–Ω–∏–µ.

–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –ª–∏–¥—ã, –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–∏–ª–∏ —Ñ—Ä–∞–∑—ã), –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –¥–ª—è –≤–∞—Å —Å–æ–æ–±—â–µ–Ω–∏–µ.
–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å–ª–æ–≤–∞, –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö, –±–æ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –Ω–µ–Ω—É–∂–Ω–æ–µ –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ.

–û–±—ã—á–Ω–æ —Ç–∞–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ —è–≤–ª—è—é—Ç—Å—è –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ñ—Ä–∞–∑—ã, –∞ —Ç–∞–∫–∂–µ —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã –≤–∞—à–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤''')


@dp.message_handler(commands=["delete"])
async def set_time(message: types.Message):
    word = str(message.get_args())
    db.remove_keyword_from_table(word)


@dp.message_handler(commands=["pay"])
async def set_time(message: types.Message):
    if db.is_admin(message.from_user.username):
        x = datetime.datetime.now()
        user = str(message.get_args())
        subscription_end = add_months(x, 1)
        try:
            db.pay(user, str(subscription_end))
            await message.answer("–£—Å–ø–µ—à–Ω–æ!")
        except:
            await message.answer(
                "–û—à–∏–±–∫–∞!\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!")
    else:
        await message.answer("–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")


''' –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ !!!'''


def add_months(sourcedate, months):
    month = sourcedate.month - 1 + months
    year = sourcedate.year + month // 12
    month = month % 12 + 1
    day = min(sourcedate.day, calendar.monthrange(year, month)[1])
    return datetime.date(year, month, day)


@ dp.message_handler(Text(equals=['–ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê üéØ', "–ù–∞–∑–∞–¥"]))
async def keywords(message: types.Message):
    await message.answer(text='''–ë–æ—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –≤ Telegram —á–∞—Ç–∞—Ö –∏ –∫–∞–Ω–∞–ª–æ–≤. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–æ—Ç–µ –±–∞–∑–∞ —á–∞—Ç–æ–≤ –∏ –∫–∞–Ω–∞–ª–æ–≤ –±–æ–ª—å—à–µ 35000 (–ö–∞–∂–¥—ã–π —Ä–∞–∑ –±–∞–∑–∞ —Ä–∞—Å—Ç–µ—Ç)

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å/—É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –ø–æ–∏—Å–∫ –≤ —á–∞—Ç–∞—Ö.

–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–∏—Å–∫ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ø–æ –∫–Ω–æ–ø–∫–µ –û–ü–õ–ê–¢–êüí∞
–¢–∞–∫ –∂–µ –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å–≤–æ—è –±–∞–∑–∞ —á–∞—Ç–æ–≤ –∏ –∫–∞–Ω–∞–ª–æ–≤ —Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ –≤ –º–µ–Ω—é ‚Äú–ß–∞—Ç—ãüîé‚Äù..''', reply_markup=keywords_list())


@ dp.message_handler(Text(equals='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞'))
async def unexcepted_keywords_list(message: types.Message):
    if db.is_pay(message.from_user.id) is False:
        await message.answer(text="""–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞
–ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ–ø–ª–∞—Ç–∞ üí∞¬ª""")
    else:
        db.delete_all(message.from_user.id, 'users_keywords')
        await message.answer(text="–í—ã —É–¥–∞–ª–∏–ª–∏ –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞.\n –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ!",
                             reply_markup=keywords_list())


@ dp.message_handler(Text(equals='–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤'))
async def unexcepted_keywords_list(message: types.Message):
    if db.is_pay(message.from_user.id):
        keywords = db.all_words(message.from_user.id)
        await message.answer(text="–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤!\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–ª–æ–≤–æ!",
                             reply_markup=words_list(keywords))
    else:
        await message.answer(text="""–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞
–ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ–ø–ª–∞—Ç–∞ üí∞¬ª""")


@ dp.message_handler(Text(equals='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ'))
async def add_word_menu(message: types.Message):
    if db.is_pay(message.from_user.id):
        await AddWord.word.set()
        await message.answer(text="–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ", reply_markup=back())
    else:

        await message.answer(text="""–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞
–ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ–ø–ª–∞—Ç–∞ üí∞¬ª""")


@ dp.message_handler(Text(equals="–ù–∞–∑–∞–¥"), state=AddWord.word)
async def add_word(message: types.Message, state: State):
    await state.finish()
    await message.answer(text='–ë–æ—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.'
                         '–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å/—É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –ø–æ–∏—Å–∫ –≤ —á–∞—Ç–∞—Ö –≤ –ø—É–Ω–∫—Ç–µ –º–µ–Ω—é "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞" –Ω–∏–∂–µ\n\n'
                         '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–∏—Å–∫ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç—ã –≤ –º–µ–Ω—é ‚Äú–ß–∞—Ç—ã‚Äù, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞.',
                         reply_markup=keywords_list())


@ dp.callback_query_handler(lambda call: call.data in db.all_words(call['from']['id']))
async def remove_word(call: types.CallbackQuery):
    keywords = db.remove_keyword(call['from']['id'], call.data)
    await call.message.answer("–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤!\n –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–ª–æ–≤–æ!",
                              reply_markup=words_list(keywords))


@ dp.callback_query_handler(lambda call: call.data in db.all_words(call['from']['id']), state=AddWord.word)
async def remove_word(call: types.CallbackQuery):
    keywords = db.remove_keyword(call['from']['id'], call.data)
    await call.message.answer("–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤!\n –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–ª–æ–≤–æ!",
                              reply_markup=words_list(keywords))


@ dp.message_handler(state=AddWord.word)
async def add_word(message: types.Message):
    telegram_id = message.from_user.id,
    db.add_keyword(telegram_id, str(message.text))
    keywords = db.all_words(telegram_id)
    await message.answer(
        text="–í–∞—à–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –Ω–∞–∂–º–∏ –Ω–∞ —Å–ª–æ–≤–æ", reply_markup=words_list(keywords))


'''–ò—Å–∫–ª—é—á–∞—é—â–∏–µ —Å–ª–æ–≤–∞ !!!'''


@ dp.message_handler(Text(equals='–ò–°–ö–õ–Æ–ß–ê–Æ–©–ò–ï –°–õ–û–í–êüö´'))
async def unexcepted_keywords_list(message: types.Message):
    await message.answer(text="–í —ç—Ç–æ–º –º–µ–Ω—é –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏—Å–∫–ª—é—á–∞—é—â–∏–µ —Å–ª–æ–≤–∞",
                         reply_markup=unexcept_keywords_list())


@ dp.message_handler(Text(equals='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏—Å–∫–ª—é—á–∞—é—â–∏–µ —Å–ª–æ–≤–∞'))
async def unexcepted_keywords_list(message: types.Message):
    await message.answer(text="–í—ã —É–¥–∞–ª–∏–ª–∏ –≤—Å–µ –∏—Å–∫–ª—é—á–∞—é—â–∏–µ —Å–ª–æ–≤–∞.\n –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ!",
                         reply_markup=unexcept_keywords_list())
    db.delete_all(message.from_user.id, 'users_unex_words')


@ dp.message_handler(Text(equals='–°–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–∞—é—â–∏—Ö —Å–ª–æ–≤'))
async def unexcepted_keywords_list(message: types.Message):
    if db.is_pay(message.from_user.id):
        keywords = db.all_unex_words(message.from_user.id)
        await message.answer(text="–°–ø–∏—Å–æ–∫ –∏–ª—é—á–∞—é—â–∏—Ö —Å–ª–æ–≤!\n –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–ª–æ–≤–æ!",
                             reply_markup=words_list(keywords))
    else:
        await message.answer(text="""–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞
–ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ–ø–ª–∞—Ç–∞ üí∞¬ª""")


@ dp.message_handler(Text(equals='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∏—Å–∫–ª—é—á–∞—é—â–µ–µ —Å–ª–æ–≤–æ'))
async def add_word_menu(message: types.Message):
    if db.is_pay(message.from_user.id):
        await AddUnex_Word.word.set()
        await message.answer(text="–í–≤–µ–¥–∏—Ç–µ –∏—Å–∫–ª—é—á–∞—é—â–µ–µ —Å–ª–æ–≤–æ", reply_markup=back())
    else:
        await message.answer(text="""–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞
–ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ–ø–ª–∞—Ç–∞ üí∞¬ª""")


@ dp.message_handler(Text(equals="–ù–∞–∑–∞–¥"), state=AddUnex_Word.word)
async def add_word(message: types.Message, state: State):
    await state.finish()
    await message.answer(text='–ë–æ—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.'
                         '–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å/—É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –ø–æ–∏—Å–∫ –≤ —á–∞—Ç–∞—Ö –≤ –ø—É–Ω–∫—Ç–µ –º–µ–Ω—é "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞" –Ω–∏–∂–µ\n\n'
                         '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–∏—Å–∫ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç—ã –≤ –º–µ–Ω—é ‚Äú–ß–∞—Ç—ã‚Äù, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞.',
                         reply_markup=unexcept_keywords_list())


@ dp.message_handler(state=AddUnex_Word.word)
async def add_word(message: types.Message):
    db.add_unex_word(message.from_user.id, str(message.text))
    keywords = db.all_unex_words(message.from_user.id)
    await message.answer(
        text="–í–∞—à–∏ –∏—Å–∫–ª—é—á–∞—é—â–∏–µ —Å–ª–æ–≤–∞\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –Ω–∞–∂–º–∏ –Ω–∞ —Å–ª–æ–≤–æ", reply_markup=words_list(keywords))


@ dp.callback_query_handler(lambda call: call.data in db.all_unex_words(call['from']['id']), state=AddUnex_Word.word)
async def remove_word(call: types.CallbackQuery):
    keywords = db.remove_unex_word(call['from']['id'], call.data)
    await call.message.answer("–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤!\n –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–ª–æ–≤–æ!",
                              reply_markup=words_list(keywords))


'''–ß–∞—Ç—ã !!!'''


@ dp.message_handler(Text(equals='–ß–ê–¢–´üîé'))
async def chat_list(message: types.Message):
    await message.answer(text='''–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –∏ –∫–∞–Ω–∞–ª–æ–≤, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ–∏—Å–∫ –ª–∏–¥–æ–≤ –¥–ª—è –≤–∞—Å üéØ\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —á–∞—Ç—ã –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã –∏–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Å–≤–æ–∏ –∫–Ω–æ–ø–Ω–æ–π "–ò–∑ –±–∞–∑—ã —á–∞—Ç–æ–≤"''',
                         reply_markup=chats_list_(message.from_user.id))


@ dp.message_handler(Text(equals='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —á–∞—Ç—ã'))
async def unexcepted_keywords_list(message: types.Message):
    if db.is_pay(message.from_user.id) is False:
        await message.answer(text="""–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞
–ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ–ø–ª–∞—Ç–∞ üí∞¬ª""")
    else:
        db.delete_all(message.from_user.id, 'users_chats')
        await message.answer(text="–í—ã —É–¥–∞–ª–∏–ª–∏ –≤—Å–µ —á–∞—Ç—ã.\n –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ!",
                             reply_markup=chats_list_(message.from_user.id))


@ dp.message_handler(Text(equals="–°–æ–±–∏—Ä–∞—Ç—å –∏–∑ –≤—Å–µ—Ö —á–∞—Ç–æ–≤"))
async def all_chat_acces(message: types.Message):
    if db.is_pay(message.from_user.id):
        await message.answer(text="–í—ã –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ –Ω–∞—à—É –±–∞–∑—É —á–∞—Ç–æ–≤",
                             reply_markup=chats_list_(message.from_user.id))
        db.set_status(message.from_user.id, 1)
    else:
        await message.answer(text="""–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞
–ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ–ø–ª–∞—Ç–∞ üí∞¬ª""")


@ dp.message_handler(Text(equals="–°–æ–±–∏—Ä–∞—Ç—å –∏–∑ –º–æ–∏—Ö —á–∞—Ç–æ–≤"))
async def all_chat_acces(message: types.Message):
    if db.is_pay(message.from_user.id):
        await message.answer(text="–í—ã –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤",
                             reply_markup=chats_list_(message.from_user.id))
        db.set_status(message.from_user.id, 0)
    else:
        await message.answer(text="""–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞
–ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ–ø–ª–∞—Ç–∞ üí∞¬ª""")


@ dp.message_handler(Text(equals='–ú–æ–∏ —á–∞—Ç—ã'))
async def chatse_list(message: types.Message):
    keywords = db.all_user_chats(message.from_user.id)
    text = "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —á–∞—Ç–æ–≤!\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —á–∞—Ç!"
    try:
        await message.answer(text=str(text),
                             reply_markup=chats_key(keywords))
    except:
        text += '\n–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–∞—Ç–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ –∏—Ö –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—ã"'
        await message.answer(text=str(text))


@ dp.message_handler(Text(equals='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç'))
async def add_word_menu(message: types.Message):
    if db.is_pay(message.from_user.id):
        await AddChat.chat.set()
        await message.answer(text="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç", reply_markup=back())
    else:
        await message.answer(text="""–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞
–ü–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–æ–ø–ª–∞—Ç–∞ üí∞¬ª""")


@ dp.callback_query_handler(lambda call: call.data in list(map(lambda x: x[:20], db.all_user_chats(call['from']['id']))))
async def remove_chat(call: types.CallbackQuery):
    text = (call["message"]["reply_markup"]["inline_keyboard"])
    text = [i[0]['text'] for i in text if call.data in i[0]['text']]
    db.remove_chat(call['from']['id'], text[0])
    keywords = db.all_user_chats(call['from']['id'])
    await call.message.answer("–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —á–∞—Ç–æ–≤!\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞!",
                              reply_markup=chats_key(keywords))


@ dp.message_handler(Text(equals="–ù–∞–∑–∞–¥"), state=AddChat.chat)
async def add_word(message: types.Message, state: State):
    await state.finish()
    await message.answer(text='–ë–æ—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.\n'
                         '–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å / —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –ø–æ–∏—Å–∫ –≤ —á–∞—Ç–∞—Ö –≤ –ø—É–Ω–∫—Ç–µ –º–µ–Ω—é\n"–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞" –Ω–∏–∂–µ\n\n'
                         '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–∏—Å–∫ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç—ã –≤ –º–µ–Ω—é ‚Äú–ß–∞—Ç—ã‚Äù, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞.',
                         reply_markup=chats_list_(message.from_user.id))


@ dp.callback_query_handler(lambda call: call.data in list(map(lambda x: x[:20], db.all_user_chats(call['from']['id']))), state=AddChat.chat)
async def remove_chat(call: types.CallbackQuery):
    text = (call["message"]["reply_markup"]["inline_keyboard"])
    text = [i[0]['text'] for i in text if call.data in i[0]['text']]
    db.remove_chat(call['from']['id'], text[0])
    keywords = db.all_user_chats(call['from']['id'])

    await call.message.answer("–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —á–∞—Ç–æ–≤!\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞!",
                              reply_markup=chats_key(keywords))


@ dp.callback_query_handler(lambda call: call.text in db.all_user_chats(call['from']['id']), state=AddChat.chat)
async def remove_chat(call: types.CallbackQuery):
    keywords = db.remove_chat(call['from']['id'], call.text)
    await call.message.answer("–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤!\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–ª–æ–≤–æ!",
                              reply_markup=words_list(keywords))


@ dp.message_handler(state=AddChat.chat)
async def add_word(message: types.Message):
    await bot.send_message(chat_id=5593323077, text=f'/request {str(message.text)} {message.from_user.id}')
    await sleep(1)
    chats = db.all_user_chats(message.from_user.id)
    await message.answer(
        text="–í–∞—à–∏ —á–∞—Ç—ã. –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π —á–∞—Ç –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –±–æ—Ç –≤—Å—Ç—É–ø–∏—Ç –≤ —á–∞—Ç.\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞", reply_markup=chats_key(chats))


"""–ö–Ω–æ–ø–∫–∞ HELP !!!"""


@ dp.message_handler(commands=["help"])
async def main_menu(message: types.Message):
    await message.answer(
        text="""–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–µ—Ä–≤–∏—Å:

–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –æ–±—É—á–µ–Ω–Ω—ã–π –±–æ—Ç —Å–∏–¥–∏—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö –¥–ª—è –æ–±—â–µ–Ω–∏—è, –±–∏–∑–Ω–µ—Å–∞, –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞—Ö.

–û–Ω —á–∏—Ç–∞–µ—Ç –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º –∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –¥–ª—è –í–ê–° —Å–æ–æ–±—â–µ–Ω–∏–µ.

–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –ª–∏–¥—ã, –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–∏–ª–∏ —Ñ—Ä–∞–∑—ã), –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –¥–ª—è –≤–∞—Å —Å–æ–æ–±—â–µ–Ω–∏–µ.
–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å–ª–æ–≤–∞, –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö, –±–æ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –Ω–µ–Ω—É–∂–Ω–æ–µ –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ.

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –ª–∏–¥—ã, –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–∏–ª–∏ —Ñ—Ä–∞–∑—ã), –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –¥–ª—è –≤–∞—Å —Å–æ–æ–±—â–µ–Ω–∏–µ.
–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å–ª–æ–≤–∞, –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö, –±–æ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –Ω–µ–Ω—É–∂–Ω–æ–µ –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ.

–û–±—ã—á–Ω–æ —Ç–∞–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ —è–≤–ª—è—é—Ç—Å—è –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ñ—Ä–∞–∑—ã, –∞ —Ç–∞–∫–∂–µ —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã –≤–∞—à–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤""",
        reply_markup=start_keyboard())

"""–ê–¥–º–∏–Ω–∫–∞ """


@dp.message_handler(commands=['adm'])
async def login(message: types.Message):
    pass
